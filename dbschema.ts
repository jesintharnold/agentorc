/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.1
 * $ pg-to-ts generate -c postgresql://username:password@localhost:5432/agentorc -t jobexecutions -t jobs -t taskexecutions -s orc
 *
 */


export type Json = unknown;

// Table jobexecutions
export interface Jobexecutions {
  id: string;
  job_id: string | null;
  state: string;
  start_time: Date;
  end_time: Date | null;
  updated_at: Date | null;
}
export interface JobexecutionsInput {
  id?: string;
  job_id?: string | null;
  state: string;
  start_time: Date;
  end_time?: Date | null;
  updated_at?: Date | null;
}
const jobexecutions = {
  tableName: 'jobexecutions',
  columns: ['id', 'job_id', 'state', 'start_time', 'end_time', 'updated_at'],
  requiredForInsert: ['state', 'start_time'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Jobexecutions,
  $input: null as unknown as JobexecutionsInput
} as const;

// Table jobs
export interface Jobs {
  id: string;
  name: string;
  description: string;
  created_at: Date | null;
  updated_at: Date | null;
  execorder: Json | null;
  tasks: Json;
  status: string;
  image: string;
}
export interface JobsInput {
  id?: string;
  name: string;
  description: string;
  created_at?: Date | null;
  updated_at?: Date | null;
  execorder?: Json | null;
  tasks: Json;
  status: string;
  image: string;
}
const jobs = {
  tableName: 'jobs',
  columns: ['id', 'name', 'description', 'created_at', 'updated_at', 'execorder', 'tasks', 'status', 'image'],
  requiredForInsert: ['name', 'description', 'tasks', 'status', 'image'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Jobs,
  $input: null as unknown as JobsInput
} as const;

// Table taskexecutions
export interface Taskexecutions {
  id: string;
  job_exc_id: string | null;
  task_id: string;
  state: string;
  start_time: Date | null;
  end_time: Date | null;
  logs: string | null;
  updated_at: Date | null;
}
export interface TaskexecutionsInput {
  id: string;
  job_exc_id?: string | null;
  task_id: string;
  state: string;
  start_time?: Date | null;
  end_time?: Date | null;
  logs?: string | null;
  updated_at?: Date | null;
}
const taskexecutions = {
  tableName: 'taskexecutions',
  columns: ['id', 'job_exc_id', 'task_id', 'state', 'start_time', 'end_time', 'logs', 'updated_at'],
  requiredForInsert: ['id', 'task_id', 'state'],
  primaryKey: null,
  foreignKeys: { job_exc_id: { table: 'jobexecutions', column: 'id', $type: null as unknown as Jobexecutions }, },
  $type: null as unknown as Taskexecutions,
  $input: null as unknown as TaskexecutionsInput
} as const;


export interface TableTypes {
  jobexecutions: {
    select: Jobexecutions;
    input: JobexecutionsInput;
  };
  jobs: {
    select: Jobs;
    input: JobsInput;
  };
  taskexecutions: {
    select: Taskexecutions;
    input: TaskexecutionsInput;
  };
}

export const tables = {
  jobexecutions,
  jobs,
  taskexecutions,
}
